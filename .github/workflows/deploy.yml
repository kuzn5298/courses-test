name: Deploy Projects with Build Step

on:
  push:
    branches:
      - main # Триггер срабатывает при пуше в ветку main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Устанавливаем Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Вы можете изменить версию Node.js, если нужно

      # 3. Определяем изменённые проекты
      - name: Identify changed projects
        id: changes
        run: |
          CHANGED_PROJECTS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | cut -d'/' -f1 | uniq)
          echo "Changed projects: $CHANGED_PROJECTS"
          echo "changed_projects=$CHANGED_PROJECTS" >> $GITHUB_ENV

      # 4. Обрабатываем изменённые проекты
      - name: Build and copy projects
        run: |
          mkdir -p deploy
          for project in ${{ env.changed_projects }}; do
            if [ -d "$project" ]; then
              echo "Processing $project..."

              # Переходим в папку проекта
              cd $project

              # Устанавливаем зависимости
              if [ -f "package.json" ]; then
                echo "Installing dependencies for $project..."
                npm install
              else
                echo "No package.json found in $project. Skipping npm install."
              fi

              # Запускаем сборку
              if [ -f "package.json" ]; then
                echo "Building $project..."
                npm run build || echo "Build failed for $project. Skipping deployment."
              fi

              # Проверяем, где находятся файлы для деплоя
              if [ -d "dist" ]; then
                echo "Copying files from dist for $project..."
                cp -r dist ../deploy/$project
              elif [ -d "build" ]; then
                echo "Copying files from build for $project..."
                cp -r build ../deploy/$project
              else
                echo "No dist or build folder found for $project. Skipping deployment."
              fi

              # Возвращаемся в корневую директорию
              cd ..
            fi
          done

      # 5. Деплой на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
